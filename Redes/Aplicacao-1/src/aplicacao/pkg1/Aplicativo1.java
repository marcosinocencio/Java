/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacao.pkg1;

import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.*;
import javax.swing.JFileChooser;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author FELIPE
 */
public class Aplicativo1 extends javax.swing.JFrame {

    /**
     * Creates new form Aplicativo1
     */
    public Aplicativo1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "null", "ConstantConditions"})
    public static byte[] FileTobyteArray(File file) throws IOException 
	{
		    ByteArrayOutputStream o = null;
		    InputStream i = null;
		    try {
		        byte[] buffer = new byte[4096];
		        o = new ByteArrayOutputStream();
		        i = new FileInputStream(file);
		        int read;
		        while ( (read = i.read(buffer)) != -1 ) {
		            o.write(buffer, 0, read);
		        }
		    } finally { 
		        try {
		             if ( o != null ) 
		                 o.close();
		        } catch ( IOException e) {
		        }

		        try {
		             if ( i != null ) 
		                  i.close();
		        } catch ( IOException e) {
		        }
		    }
		    return o.toByteArray();
	}
    
    @SuppressWarnings({"null", "ConstantConditions"})
     public static byte[] serializeDatagram(DatagramaIP data) {
    	ByteArrayOutputStream bos = new ByteArrayOutputStream();
    	ObjectOutputStream out = null;
    	byte[] buffer = null; 
    	try {
    		
    	    out = new ObjectOutputStream(bos);   
    	    out.writeObject(data);
    	    buffer = bos.toByteArray();
     
    	} catch (IOException ex) {
    	} finally {
    		try {
    			out.close();
    			bos.close();
    		} catch (IOException ex) {
    		}
    	}
    	return buffer;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplicação 1");
        setResizable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Abrir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Enviar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(jButton1)
                .addGap(94, 94, 94)
                .addComponent(jButton2)
                .addContainerGap(269, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(33, 33, 33))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        File f = jFileChooser1.getSelectedFile();
        
        if(f == null)
            JOptionPane.showMessageDialog(rootPane, "Você ainda não abriu um arquivo!");
        else{
            try {
                byte[] file;
                DatagramaIP datagrama = new DatagramaIP();
                datagrama.sett_cabecalho(20);
                datagrama.setprotocolo("TCP");
                byte[] b_file = null;
                byte[] send_datagrama = null; 
          	jTextArea1.append("Datagrama enviado!\n\n");
                FileReader fileReader = null;
                try {
                    fileReader = new FileReader(f);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Aplicativo1.class.getName()).log(Level.SEVERE, null, ex);
                }
                    BufferedReader bufferedReader = new BufferedReader(fileReader);
                    String linha, file_str = "";
                    while ((linha = bufferedReader.readLine()) != null)
                            file_str.concat(linha);
                    
                            b_file = file_str.getBytes();
                            datagrama.setData(b_file);
                            datagrama.settamanho(b_file.length);
                            send_datagrama = serializeDatagram(datagrama);
                            
                try (Socket clientSocket = new Socket("localhost", 6789)) {
                    DataOutputStream outToServer = new DataOutputStream(clientSocket.getOutputStream()); 
                    
                    outToServer.write(send_datagrama);
                }
            } catch (IOException ex) {
                Logger.getLogger(Aplicativo1.class.getName()).log(Level.SEVERE, null, ex);
                jTextArea1.append("Falha na conexão com a aplicação 2\n\n");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        FileNameExtensionFilter texto = new FileNameExtensionFilter("Arquivo Texto", "txt");
        jFileChooser1.addChoosableFileFilter(texto);
        jFileChooser1.setFileFilter(texto);
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        int returnVal = jFileChooser1.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
        File f = jFileChooser1.getSelectedFile();
        File arq = new File(f.getAbsolutePath());
        jTextArea1.append("Abertura do arquivo:   "+f.getAbsolutePath()+ "\n\n");
        try {
            
            FileReader fileReader = new FileReader(arq);
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            String linha = "";
            jTextArea1.append("Conteúdo do arquivo texto:\n\n");
           while ( ( linha = bufferedReader.readLine() ) != null) {
                
                 jTextArea1.append(linha);
                 jTextArea1.append("\n");
            }
 
           jTextArea1.append("\n\n\n");
            fileReader.close();
            bufferedReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }    
        }
        jFileChooser1.removeChoosableFileFilter(texto);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aplicativo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aplicativo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aplicativo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aplicativo1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aplicativo1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
