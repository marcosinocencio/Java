/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aplicacao.pkg1;
import java.io.*; 
import java.net.*; 
import java.util.ArrayList;
/**
 *
 * @author Vinicius
 */
public class Aplicativo2 extends javax.swing.JFrame{

    /**
     * Creates new form Aplicativo2
     */
    public Aplicativo2() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private static DatagramaIP datagram;
    private ArrayList<DatagramaIP> datagram_frag = new ArrayList<>();
    private int MTU;
    private static ServerSocket welcomeSocket; 
   
 
    
   public static byte[] serializeDatagram(DatagramaIP data) {
    	ByteArrayOutputStream bos = new ByteArrayOutputStream();
    	ObjectOutputStream out = null;
    	byte[] buffer = null; 
    	try {
    		
    	    out = new ObjectOutputStream(bos);   
    	    out.writeObject(data);
    	    buffer = bos.toByteArray();
     
    	} catch (IOException ex) {
    	} finally {
    		try {
    			out.close();
    			bos.close();
    		} catch (IOException ex) {
    		}
    	}
    	return buffer;
    }
    
    @SuppressWarnings({"null", "ConstantConditions"})
    public static DatagramaIP deserializeDatagram(byte[] buffer) {
	ByteArrayInputStream bis = new ByteArrayInputStream(buffer);
	ObjectInputStream in = null;
    	DatagramaIP datagrama = null;
    	try {
    		//arquivo onde estao os dados serializados

    		try {
    		  in = new ObjectInputStream(bis);
    		  datagrama = (DatagramaIP)in.readObject(); 
    		} finally {

    		}
    	} catch (ClassNotFoundException | IOException ex) {
    	} finally {
    		try {
      		  bis.close();
      		  in.close();
    		} catch (IOException ex) {
    		}
    	}
     
    	return datagrama;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplicação 2");
        setPreferredSize(new java.awt.Dimension(710, 482));
        setResizable(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Fragmentar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(276, 276, 276))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void FragmentBytes(){
    
    	int frag_offset = 0, currentbyteindex = 0, lastcurrentbyteindex = 0, j = 0;
    	jTextArea1.append("Fragmento: " + datagram.getData().length + " \nDivisâo " + Integer.toString(datagram.getData().length/MTU));
    	if(datagram.getData().length > MTU)
    	{
    		while(currentbyteindex < datagram.getData().length)
    		{
    			lastcurrentbyteindex = currentbyteindex;
    			currentbyteindex += MTU-20;
    			if(currentbyteindex >= datagram.getData().length)currentbyteindex = datagram.getData().length;
    			DatagramaIP data = new DatagramaIP();
    			data.setFragmentoffset(frag_offset);
    			int frag_size = MTU-20;
    			if((lastcurrentbyteindex + frag_size) >= datagram.getData().length)
    				  frag_size = datagram.getData().length - lastcurrentbyteindex; 
    				
    			byte[] buffer = new byte[frag_size];
    			jTextArea1.append("\n\nByte atual: " + currentbyteindex + " último byte: " + lastcurrentbyteindex + " tamanho do byte: " + buffer.length);
				for(int b = lastcurrentbyteindex; b < currentbyteindex; b++)
    			{
					if(b >= datagram.getData().length)break;
    				buffer[j] = datagram.getData()[b];
    				
    				j++;
    			}
				j = 0;				
    			data.setData(buffer);
    			datagram_frag.add(data);
    			jTextArea1.append("\n\nTamanho Fragmento: = " + frag_size + " frag_offset = " + frag_offset);
    			frag_offset += buffer.length/8;
    			
    		}
    	}
    	jTextArea1.append("\n\ndatagrm_frag" + datagram_frag.size());
    	
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception{
        /* Set the Nimbus look and feel */
        /* Create and display the form */
            
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Aplicativo2().setVisible(true);
            }
          });
          int result = 9;
	    welcomeSocket = new ServerSocket(6789); 
	    while(true) 
	    { 
	    	Socket connectionSocket = welcomeSocket.accept(); 
	    	
	    	DataInputStream inFromClient = 
	    			new DataInputStream((connectionSocket.getInputStream())); 
	    	System.out.println("INFROMCLIENT:" + inFromClient.available());
	    	byte[] clientbuffer = new byte[inFromClient.available()]; 
         
	        result = inFromClient.read(clientbuffer); 
	        System.out.println("\n\nAplicacao-2 " + Integer.toString(clientbuffer.length) + " result = " + Integer.toString(result));
	        DatagramaIP datagrama = deserializeDatagram(clientbuffer);
	        datagrama.setData(datagram);
	        String data = new String(datagram.getData());
             }
                    
        }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
