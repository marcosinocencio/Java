/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Vinicius
 */
public class NovoJFrame extends javax.swing.JFrame {
     /**
     * Creates new form NovoJFrame
     */
    File grafo;
    Grafo g;
    Algoritmos a;
    int i;
    
    public NovoJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton2);

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo de texto (.txt)", "txt");
        jFileChooser1.setFileFilter(filter);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trabalho Prático 1 - Grafos");
        setResizable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setSelectionColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTextArea1);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Lista de Adjacência");

        jRadioButton2.setText("Matriz de Adjacência");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Representação Computacional");

        jMenu1.setText("Abrir");

        jMenuItem1.setText("Grafo ou Dígrafo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opções");

        jMenu6.setText("Árvore Geradora Mínima");

        jMenuItem8.setText("Kruskal");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem8);

        jMenuItem9.setText("Prim");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem9);

        jMenu2.add(jMenu6);

        jMenu5.setText("Busca");

        jMenuItem3.setText("Largura");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        jMenuItem5.setText("Profundidade");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenu2.add(jMenu5);

        jMenu3.setText("Caminho Mínimo");

        jMenuItem6.setText("Dijkstra");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Bellman-Ford");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenu2.add(jMenu3);

        jMenu4.setText("Verificar");

        jMenuItem2.setText("Caminho entre dois vértices");
        jMenu4.add(jMenuItem2);

        jMenuItem4.setText("Grafo é conexo");
        jMenu4.add(jMenuItem4);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton1))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private Grafo leitura(File arquivo, Grafo g) throws FileNotFoundException{
         int u,v,peso, g_d; 
         
         Scanner scanner = new Scanner(new FileReader(arquivo));//Lendo o arquivo txt
         jTextArea1.setText("");
         
         i = g_d = Integer.parseInt(scanner.next()); //´Verifica se é um grafo ou se é um dígrafo
         
         if(g_d == 0){ //É grafo
             jTextArea1.append("Grafo");
             jTextArea1.append("\n=====");
         }
         else { //É dígrafo
             jTextArea1.append("Dígrafo");
             jTextArea1.append("\n======");
        }
         
        u = Integer.parseInt(scanner.next()); //Lê o numero de vértices do grafo
        
        if (jRadioButton1.isSelected()){ //Lista de adjacência 
             g = new Grafo(u, new ListaAdjacencia(u));
             
             if (g_d == 0){ // Adicionar aresta em grafo
                    while(scanner.hasNext()){
                        u = Integer.parseInt(scanner.next());                 
                        v = Integer.parseInt(scanner.next());                 
                        peso = Integer.parseInt(scanner.next());
                        g.addArestaG(u, v, peso);                         
                    }
                }
                else{ //Adicionar aresta em dígrafo
                    while(scanner.hasNext()){
                       u = Integer.parseInt(scanner.next());                 
                       v = Integer.parseInt(scanner.next());                 
                       peso = Integer.parseInt(scanner.next());
                       g.addArestaD(u, v, peso);                         
                    }     
                }
             
        }
        else{
            g = new Grafo(u, new MatrizAdjacencia(u));
           
            if (g_d == 0){ // Adicionar aresta em grafo
                    while(scanner.hasNext()){
                        u = Integer.parseInt(scanner.next());                 
                        v = Integer.parseInt(scanner.next());                 
                        peso = Integer.parseInt(scanner.next());
                        g.addArestaG(u, v, peso);                         
                    }
                }
                else{ //Adicionar aresta em dígrafo
                    while(scanner.hasNext()){
                       u = Integer.parseInt(scanner.next());                 
                       v = Integer.parseInt(scanner.next());                 
                       peso = Integer.parseInt(scanner.next());
                       g.addArestaD(u, v, peso);                         
                    }     
                }
        }
        return g;     
    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int returnVal = jFileChooser1.showOpenDialog(this);
        
        if (returnVal == JFileChooser.APPROVE_OPTION){
            grafo = jFileChooser1.getSelectedFile();
            try {          
                g = leitura (grafo, g);
                g.exibir();
                a = new Algoritmos(g);                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NovoJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
            int i; String b;
        
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{
            b = JOptionPane.showInputDialog(null, "Qual o vértice inicial para encontrar o caminho mínimo?", "Caminho mínimo (Dijkstra)",JOptionPane.DEFAULT_OPTION);
            if(b != null){
                i = Integer.parseInt(b);
              
                if (i >= g.numVert || i < 0)
                    JOptionPane.showMessageDialog(null, "Digite um vértice válido", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.Dijkstra(i);
            }
        }       
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        int i; String b;
        
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{
            b = JOptionPane.showInputDialog(null, "Digite com qual vértice deseja iniciar a busca?", "Busca em Profundade",JOptionPane.DEFAULT_OPTION);
            if(b != null){
                i = Integer.parseInt(b);
              
                if (i >= g.numVert || i < 0)
                    JOptionPane.showMessageDialog(null, "Digite um vértice válido", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.DFS(i);
            }
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
            int i; String b;
        
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{
            b = JOptionPane.showInputDialog(null, "Digite com qual vértice deseja iniciar a busca?", "Busca em Largura",JOptionPane.DEFAULT_OPTION);
            if(b != null){
                i = Integer.parseInt(b);
              
                if (i >= g.numVert || i < 0)
                    JOptionPane.showMessageDialog(null, "Digite um vértice válido", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.BFS(i);
            }
        }
    
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        
                int i; String b;
        
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{
            b = JOptionPane.showInputDialog(null, "Qual o vértice inicial para encontrar o caminho mínimo?", "Caminho mínimo (Bellman-Ford)",JOptionPane.DEFAULT_OPTION);
            if(b != null){
                i = Integer.parseInt(b);
              
                if (i >= g.numVert || i < 0)
                    JOptionPane.showMessageDialog(null, "Digite um vértice válido", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.Bellman_Ford(i);
            }
        } 
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{        
                if (i != 0)
                    JOptionPane.showMessageDialog(null, "Esse algoritmo é somente para grafos ponderados", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.AGM_Kruskal();
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        if(grafo == null)            
            JOptionPane.showMessageDialog(null, "Abra um grafo ou um dígrafo", "Aviso", JOptionPane.WARNING_MESSAGE);
        else{        
                if (i != 0)
                    JOptionPane.showMessageDialog(null, "Esse algoritmo é somente para grafos ponderados", "Aviso", JOptionPane.WARNING_MESSAGE);
                else
                    a.AGM_Prim();
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
